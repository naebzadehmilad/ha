global

#        log /var/log/haproxy.log local0 
 #       log /var/log/haproxy.log local0 notice
        log 127.0.0.1 local2 info
        log 127.0.0.1 local1 alert
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats socket 127.0.0.1:14567
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
        tune.ssl.cachesize 1000000
        maxconn 10000000
      #  lua-load /etc/haproxy/cors.lua

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
#	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
 #         tune.bufsize 32768
 # tune.ssl.default-dh-param 2048

  ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
  ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  ssl-default-server-options ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
        tune.ssl.default-dh-param 2048 
        defaults
	log	global
	mode	http
	option	httplog
        option http-keep-alive 
        option http-server-close
        option redispatch
        timeout http-request    60s
        timeout queue           15s
        timeout connect         60s
        timeout client          60s
        timeout client-fin      15s
        timeout server          60s
        timeout server-fin      15s
        timeout http-keep-alive 15s
        errorfile       400     /etc/haproxy/errors/400.http
        errorfile       403     /etc/haproxy/errors/403.http
        errorfile       408     /etc/haproxy/errors/408.http
        errorfile       500     /etc/haproxy/errors/500.http
        errorfile       502     /etc/haproxy/errors/502.http
        errorfile       503     /etc/haproxy/errors/503.http
        errorfile       504     /etc/haproxy/errors/504.http
        maxconn 99999


frontend http-80
        redirect scheme https code 301 if !{ ssl_fc }
        log global
        bind *:80 alpn h2,http/1.1 
        mode http 
        default_backend no-match  

frontend http-ssl
        bind *:443   ssl crt /etc/ssl/ca1.pem  alpn h2,http/1.1 
        mode http
        maxconn 90000
        default_backend no-match
        log global 
        
################################################################
#  # CORS configuration
    # capture origin HTTP header
  #  capture request header origin len 128
 #   # add Access-Control-Allow-Origin HTTP header to response if origin matches the list of allowed URLs
  #  http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if !METH_OPTIONS { capture.req.hdr(0) -m reg -f /etc/haproxy/cors-origins.lst }
    # if a preflight request is made, use CORS preflight backend
  #  http-request use-service lua.cors-response if METH_OPTIONS { capture.req.hdr(0) -m reg -f /etc/haproxy/cors-origins.lst }
#################################################################
#xforward
capture request header X-Forwarded-For len 50
capture request header User-Agent len 300







#reqidel  ^X-Forwar.* if ! LOCALHOST
#reqirep  ^CF-Connecting-IP:(.*)$ X-Forwarded-For:\1 if allowed_ip 
#option forwardfor header X-Real-IP 
log-format  client-ip(CDN)[%ci]Bytesread[%B]milisecond[%ms]statuscode[%ST]responsetime[%Tr]bytesuploaded[%U]httpmethod[%HM]serverqueue[%sq]frontendip[%fi]frontendconcurrentconnection[%fc]sourceip[%bi]backendname[%b]serverip[%si]httpuri[%HU]requestheader[%hr]termintstate[%ts]httpquerystring[%HQ]httpversion[%HV]retries[%rc]requestcounter[%rt]sslcipher[%sslc]sslversion[%sslv]"headerip||%[capture.req.hdr(0)]"


        acl allowed_ip src -f /etc/haproxy/allowed_ip.list
         acl host1 hdr(host) -i host1.net
         acl host2 hdr(host) -i s1.host1.net
       #acl api_redirect path_reg -i   ^\/AntiForgery|Chat|Consent|Stripe|api\/[^\.]*

         acl host3  hdr(host) -i s3.host1.net
         acl host4 hdr(host) -i s4.host1.net
         acl host5 hdr(host) -i s5.host1.net

         acl host6 hdr(host) -i www.host1.net
         acl kibana_acl hdr(host) -i kibana.host1.net
         acl reg hdr(host) -i reg.host1.net
         

          acl t hdr(host) -i t.host1.net
           
       #  acl panel_redirect path_reg -i  ^\/app|account\/[^\.]*
    
       use_backend  if 
  


         use_backend t if t
###BACKEND-no-match
backend no-match
      mode http
      http-request deny deny_status 400





backend erfansalamat_panel
        log global
        mode http
        #option httplog
        #reqrep ^(GET)\ /app/(.*) \1\ /\2
        compression algo gzip
        compression type text/html text/plain text/css application/javascript application/json
       server host1 172.16.120.10:31101
       server host2 172.16.120.11:31101
       server ..... 172.16.120.12:31101




backend kibana
        log global
        mode http
        #option httplog
        compression algo gzip
        compression type text/html text/plain text/css application/javascript application/json
        server kibana1 172.16.120.130:8585



backend t
        log global
        mode http
        #option httplog
        compression algo gzip
        compression type text/html text/plain text/css application/javascript application/json
        balance roundrobin
        server t1 172.16.120.10:32676 check fall 3 rise 2
        server t2 172.16.120.11:32676 check fall 3 rise 2
        server t3 172.16.120.12:32676 check fall 3 rise 2
        server t4 172.16.120.13:32676 check fall 3 rise 2



###panel


listen admin
        bind *:8080
        stats enable
        stats refresh 10s
        mode http
        #stats hide-version
        stats uri     /
        #stats realm   HAProxy Statistics
        #stats auth    admin:...
